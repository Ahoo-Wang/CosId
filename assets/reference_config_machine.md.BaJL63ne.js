import{_ as a,c as d,a2 as e,o as s}from"./chunks/framework.Dg3afQf7.js";const k=JSON.parse('{"title":"Machine 配置","description":"","frontmatter":{},"headers":[],"relativePath":"reference/config/machine.md","filePath":"reference/config/machine.md","lastUpdated":1760420434000}'),i={name:"reference/config/machine.md"};function o(r,t,h,n,c,l){return s(),d("div",null,t[0]||(t[0]=[e(`<h1 id="machine-配置" tabindex="-1">Machine 配置 <a class="header-anchor" href="#machine-配置" aria-label="Permalink to &quot;Machine 配置&quot;">​</a></h1><blockquote><p><code>me.ahoo.cosid.spring.boot.starter.machine.MachineProperties</code></p></blockquote><table tabindex="0"><thead><tr><th>名称</th><th>数据类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>stable</td><td><code>boolean</code></td><td>是否为稳定的实例,稳定实例将不回收机器号</td><td><code>false</code></td></tr><tr><td>port</td><td><code>Integer</code></td><td>端口号</td><td>进程ID（PID）</td></tr><tr><td>instanceId</td><td><code>String</code></td><td>应用实例编号(全局唯一)</td><td>应用IP:PID</td></tr><tr><td>machineBit</td><td><code>int</code></td><td>机器位数</td><td><code>10</code></td></tr><tr><td>stateStorage</td><td><code>StateStorage</code></td><td>机器状态存储</td><td></td></tr><tr><td>distributor</td><td><code>Distributor</code></td><td>机器号分发器</td><td></td></tr><tr><td>guarder</td><td><code>Guarder</code></td><td>机器号(心跳)守护</td><td></td></tr><tr><td>clock-backwards</td><td><code>ClockBackwards</code></td><td>时钟回拨配置</td><td></td></tr></tbody></table><h3 id="statestorage" tabindex="-1">StateStorage <a class="header-anchor" href="#statestorage" aria-label="Permalink to &quot;StateStorage&quot;">​</a></h3><blockquote><p>状态存储配置</p></blockquote><table tabindex="0"><thead><tr><th>名称</th><th>数据类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>local</td><td><code>StateStorage.Local</code></td><td>本地机器状态存储配置</td><td></td></tr></tbody></table><h4 id="statestorage-local" tabindex="-1">StateStorage.Local <a class="header-anchor" href="#statestorage-local" aria-label="Permalink to &quot;StateStorage.Local&quot;">​</a></h4><table tabindex="0"><thead><tr><th>名称</th><th>数据类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>state-location</td><td><code>String</code></td><td>状态存储位置</td><td><code>./cosid-machine-state/</code></td></tr></tbody></table><h3 id="distributor" tabindex="-1">Distributor <a class="header-anchor" href="#distributor" aria-label="Permalink to &quot;Distributor&quot;">​</a></h3><blockquote><p>机器号分配器配置</p></blockquote><table tabindex="0"><thead><tr><th>名称</th><th>数据类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td><code>Distributor.Type</code></td><td>机器号分配器类型：<code>MANUAL</code>/<code>STATEFUL_SET</code>/<code>JDBC</code>/<code>REDIS</code>/<code>ZOOKEEPER</code></td><td><code>MANUAL</code></td></tr><tr><td>manual</td><td><code>Distributor.Manual</code></td><td>手动分配器配置</td><td></td></tr></tbody></table><h4 id="distributor-manual" tabindex="-1">Distributor.Manual <a class="header-anchor" href="#distributor-manual" aria-label="Permalink to &quot;Distributor.Manual&quot;">​</a></h4><table tabindex="0"><thead><tr><th>名称</th><th>数据类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>machineId</td><td><code>Integer</code></td><td>机器号</td><td><code>null</code></td></tr></tbody></table><h2 id="clockbackwards" tabindex="-1">ClockBackwards <a class="header-anchor" href="#clockbackwards" aria-label="Permalink to &quot;ClockBackwards&quot;">​</a></h2><blockquote><p><code>me.ahoo.cosid.spring.boot.starter.machine.MachineProperties.ClockBackwards</code></p></blockquote><table tabindex="0"><thead><tr><th>名称</th><th>数据类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>spin-threshold</td><td><code>int</code></td><td>自旋同步阈值（ms）</td><td><code>10</code></td></tr><tr><td>broken-threshold</td><td><code>int</code></td><td>抛出异常（<code>ClockTooManyBackwardsException</code>）阈值（ms）</td><td><code>2000</code></td></tr></tbody></table><p><strong>YAML 配置样例</strong></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cosid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${spring.application.name}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  machine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    distributor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    guarder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div>`,18)]))}const b=a(i,[["render",o]]);export{k as __pageData,b as default};
