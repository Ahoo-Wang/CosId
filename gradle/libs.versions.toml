[versions]
# libraries
springBoot = "2.7.12"
springCloud = "2021.0.7"
okhttp = "4.12.0"
testcontainers = "1.19.8"
guava = "33.2.1-jre"
mybatis = "3.5.16"
mybatisSpringBoot = "3.0.3"
junitPioneer = "1.9.1"
axon = "4.9.4"
flowable = "6.8.1"
activiti = "7.0.0.SR1"
springDoc = "1.8.0"
hamcrest = "2.2"
jmh = "1.37"
# plugins
testRetry= "1.5.9"
publishPlugin = "2.0.0"
jmhPlugin = "0.7.2"
spotbugs = "6.0.18"

[libraries]
springBootDependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
springCloudDependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "springCloud" }
okhttpBom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
axonBom = { module = "org.axonframework:axon-bom", version.ref = "axon" }
testcontainersBom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
mybatis = { module = "org.mybatis:mybatis", version.ref = "mybatis" }
mybatisSpringBoot = { module = "org.mybatis.spring.boot:mybatis-spring-boot-starter", version.ref = "mybatisSpringBoot" }
springDocStarterWebfluxUi = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springDoc" }
activitiEngine = { module = "org.activiti:activiti-engine", version.ref = "activiti" }
activitiSpringBootStarter = { module = "org.activiti:activiti-spring-boot-starter", version.ref = "activiti" }
flowableEngineCommon = { module = "org.flowable:flowable-engine-common", version.ref = "flowable" }
flowableSpring = { module = "org.flowable:flowable-spring", version.ref = "flowable" }
flowableSpringBootAutoconfigure = { module = "org.flowable:flowable-spring-boot-autoconfigure", version.ref = "flowable" }
junitPioneer = { module = "org.junit-pioneer:junit-pioneer", version.ref = "junitPioneer" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
jmhCore = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmhGeneratorAnnprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
[plugins]
testRetry = { id = "org.gradle.test-retry", version.ref = "testRetry" }
publishPlugin = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "publishPlugin" }
jmhPlugin = { id = "me.champeau.jmh", version.ref = "jmhPlugin" }
spotbugsPlugin = { id = "com.github.spotbugs", version.ref = "spotbugs" }

