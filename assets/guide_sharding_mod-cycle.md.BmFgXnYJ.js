import{_ as a}from"./chunks/CosIdModShardingAlgorithm.CJ9Ifd6g.js";import{_ as e,a as r}from"./chunks/Throughput-Of-ModShardingAlgorithm-RangeShardingValue.BY-CRkKl.js";import{_ as o,c as d,a2 as i,o as s}from"./chunks/framework.Dg3afQf7.js";const S=JSON.parse('{"title":"取模分片算法","description":"","frontmatter":{},"headers":[],"relativePath":"guide/sharding/mod-cycle.md","filePath":"guide/sharding/mod-cycle.md","lastUpdated":1760420434000}'),n={name:"guide/sharding/mod-cycle.md"};function l(c,t,m,_,h,g){return s(),d("div",null,t[0]||(t[0]=[i('<h1 id="取模分片算法" tabindex="-1">取模分片算法 <a class="header-anchor" href="#取模分片算法" aria-label="Permalink to &quot;取模分片算法&quot;">​</a></h1><p align="center"><img src="'+a+'" alt="CosIdModShardingAlgorithm"></p><ul><li>算法复杂度：O(1)</li><li>性能 : 相比于 <code>org.apache.shardingsphere.sharding.algorithm.sharding.mod.ModShardingAlgorithm</code> 性能高出 <em>1200~4000</em> 倍。并且稳定性更高，不会出现严重的性能退化。</li></ul><table tabindex="0"><thead><tr><th><strong>PreciseShardingValue</strong></th><th><strong>RangeShardingValue</strong></th></tr></thead><tbody><tr><td><img src="'+e+'"></td><td><img src="'+r+'"></td></tr></tbody></table>',4)]))}const b=o(n,[["render",l]]);export{S as __pageData,b as default};
