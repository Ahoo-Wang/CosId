import{_ as s,c as e,a2 as i,o as n}from"./chunks/framework.Dg3afQf7.js";const t="/assets/CosId-VS-Leaf.BDhWdfIZ.png",g=JSON.parse('{"title":"分布式ID性能评测：CosId VS 美团 Leaf","description":"","frontmatter":{},"headers":[],"relativePath":"guide/faq/Performance-CosId-Leaf.md","filePath":"guide/faq/Performance-CosId-Leaf.md","lastUpdated":1760420434000}'),l={name:"guide/faq/Performance-CosId-Leaf.md"};function p(o,a,r,h,d,c){return n(),e("div",null,a[0]||(a[0]=[i(`<h1 id="分布式id性能评测-cosid-vs-美团-leaf" tabindex="-1">分布式ID性能评测：CosId VS 美团 Leaf <a class="header-anchor" href="#分布式id性能评测-cosid-vs-美团-leaf" aria-label="Permalink to &quot;分布式ID性能评测：CosId VS 美团 Leaf&quot;">​</a></h1><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><ul><li>MacBook Pro (M1)</li><li>JDK 17</li><li>JMH 1.36</li><li>运行在本机 Docker 内的 mariadb:10.6.4</li></ul><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><blockquote><p>基准测试代码： <a href="https://github.com/Ahoo-Wang/CosId/tree/main/cosid-benchmark" target="_blank" rel="noreferrer">cosid-benchmark</a></p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:Ahoo-Wang/CosId.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cosid-benchmark</span></span></code></pre></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group--mWwd" id="tab-Bcvw80N" checked><label data-title="Gradle" for="tab-Bcvw80N">Gradle</label><input type="radio" name="group--mWwd" id="tab-4eIf0e8"><label data-title="Java" for="tab-4eIf0e8">Java</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmh</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jmhJar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/libs/cosid-benchmark-2.2.6-jmh.jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -wi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div></div></div><h2 id="报告" tabindex="-1">报告 <a class="header-anchor" href="#报告" aria-label="Permalink to &quot;报告&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># JMH version: 1.36</span></span>
<span class="line"><span># VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS</span></span>
<span class="line"><span># Warmup: 1 iterations, 10 s each</span></span>
<span class="line"><span># Measurement: 1 iterations, 10 s each</span></span>
<span class="line"><span># Timeout: 10 min per iteration</span></span>
<span class="line"><span># Threads: 1 thread, will synchronize iterations</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Benchmark                     (step)   Mode  Cnt          Score   Error  Units</span></span>
<span class="line"><span>AtomicLongBenchmark.generate     N/A  thrpt       142725210.565          ops/s</span></span>
<span class="line"><span>CosIdBenchmark.generate            1  thrpt       131920684.604          ops/s</span></span>
<span class="line"><span>CosIdBenchmark.generate          100  thrpt       132113994.232          ops/s</span></span>
<span class="line"><span>CosIdBenchmark.generate         1000  thrpt       130281016.155          ops/s</span></span>
<span class="line"><span>LeafBenchmark.generate             1  thrpt        25787669.815          ops/s</span></span>
<span class="line"><span>LeafBenchmark.generate           100  thrpt        23897328.183          ops/s</span></span>
<span class="line"><span>LeafBenchmark.generate          1000  thrpt        23550106.538          ops/s</span></span></code></pre></div><p align="center"><img src="`+t+'" alt="CosId VS 美团 Leaf"></p><blockquote><p>GitHub Action 环境测试报告: <a href="https://github.com/Ahoo-Wang/CosId/issues/22" target="_blank" rel="noreferrer">Performance: CosId vs Leaf</a></p><p>因受到 GitHub Runner 资源限制，运行在 GitHub Runner 中的基准测试与真实环境基准测试对比有非常大的差距（近2倍）， 但是对于运行在同一环境配置资源情况下（都运行在 GitHub Runner），进行 commit 前后的基准对比、以及第三方库的对比依然是有价值的。</p></blockquote><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><ol><li>CosId (<code>SegmentChainId</code>) 性能是 Leaf (<code>segment</code>) 的 5 倍。</li><li>CosId 、Leaf 的性能与号段步长(Step) 无关。</li><li>CosId TPS 基本接近 <code>AtomicLong</code> 。</li></ol>',13)]))}const m=s(l,[["render",p]]);export{g as __pageData,m as default};
